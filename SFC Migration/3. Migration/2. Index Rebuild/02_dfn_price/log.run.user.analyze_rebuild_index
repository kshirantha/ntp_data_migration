SQL> SET DEFINE OFF
SQL> SET SQLBLANKLINES ON
SQL> 
SQL> @@01_user.user_index_stats.tab.sql
SQL> DECLARE
  2  	 l_count    NUMBER := 0;
  3  	 l_table    VARCHAR2 (50) := 'user_index_stats';
  4  	 l_map_id   VARCHAR2 (50) := '01';
  5  BEGIN
  6  	 SELECT COUNT (*)
  7  	   INTO l_count
  8  	   FROM user_tables
  9  	  WHERE table_name = UPPER (l_table);
 10  
 11  	 IF (l_count = 0)
 12  	 THEN
 13  	     EXECUTE IMMEDIATE
 14  		    'CREATE TABLE '
 15  		 || l_table
 16  		 || ' (
 17  	 height 		NUMBER,
 18  	 blocks 		NUMBER,
 19  	 name			VARCHAR2 (30 BYTE),
 20  	 partition_name 	VARCHAR2 (30 BYTE),
 21  	 lf_rows		NUMBER,
 22  	 lf_blks		NUMBER,
 23  	 lf_rows_len		NUMBER,
 24  	 lf_blk_len		NUMBER,
 25  	 br_rows		NUMBER,
 26  	 br_blks		NUMBER,
 27  	 br_rows_len		NUMBER,
 28  	 br_blk_len		NUMBER,
 29  	 del_lf_rows		NUMBER,
 30  	 del_lf_rows_len	NUMBER,
 31  	 distinct_keys		NUMBER,
 32  	 most_repeated_key	NUMBER,
 33  	 btree_space		NUMBER,
 34  	 used_space		NUMBER,
 35  	 pct_used		NUMBER,
 36  	 rows_per_key		NUMBER,
 37  	 blks_gets_per_access	NUMBER,
 38  	 pre_rows		NUMBER,
 39  	 pre_rows_len		NUMBER,
 40  	 opt_cmpr_count 	NUMBER,
 41  	 opt_cmpr_pctsave	NUMBER,
 42  	 owner			VARCHAR2 (30)
 43  	 )';
 44  	 END IF;
 45  END;
 46  /

PL/SQL procedure successfully completed.

SQL> @@02_user.sp_index_rebuild.proc.sql
SQL> CREATE OR REPLACE PROCEDURE sp_index_rebuild (is_rebuild NUMBER DEFAULT 1)
  2  IS
  3  	 l_count    NUMBER;
  4  	 l_script   VARCHAR2 (4000);
  5  	 PRAGMA AUTONOMOUS_TRANSACTION;
  6  BEGIN
  7  	 ---------------------------------------------ANALYSE INDEXES------------------------------------------------------
  8  
  9  	 BEGIN
 10  	     EXECUTE IMMEDIATE ('TRUNCATE TABLE USER_INDEX_STATS');
 11  
 12  
 13  	     FOR x IN (SELECT index_name, user AS owner
 14  			 FROM user_indexes
 15  			WHERE index_type = 'NORMAL')
 16  	     LOOP
 17  		 EXECUTE IMMEDIATE
 18  		     (	 'ANALYZE INDEX "'
 19  		      || x.owner
 20  		      || '"."'
 21  		      || x.index_name
 22  		      || '" VALIDATE STRUCTURE');
 23  
 24  		 EXECUTE IMMEDIATE
 25  			'INSERT INTO USER_INDEX_STATS SELECT S.*,'''
 26  		     || x.owner
 27  		     || ''' FROM INDEX_STATS S';
 28  	     END LOOP;
 29  
 30  	     COMMIT;
 31  	 END;
 32  
 33  	 ----------------------------------------------REBUILD INDEXES-----------------------------------------------------
 34  
 35  	 IF (is_rebuild = 1)
 36  	 THEN
 37  	     BEGIN
 38  		 FOR x
 39  		     IN (SELECT s.owner, s.name
 40  			   FROM user_index_stats s
 41  			  WHERE     (lf_rows > 100 AND del_lf_rows > 0)
 42  				AND (	height > 3
 43  				     OR ( (del_lf_rows / lf_rows) * 100) > 20))
 44  		 LOOP
 45  		     EXECUTE IMMEDIATE
 46  			    'ALTER INDEX "'
 47  			 || x.owner
 48  			 || '"."'
 49  			 || x.name
 50  			 || '" REBUILD ONLINE PARALLEL 4 NOLOGGING';
 51  		 END LOOP;
 52  	     END;
 53  	 END IF;
 54  END;
 55  /

Procedure created.

SQL> @@03_user.execute_analyze_and_rebuild.sql
SQL> BEGIN
  2  	 sp_index_rebuild (1);
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> SPOOL OFF
